"use strict";
/*
 * Project: java2typescript - https://github.com/bsorrentino/java2typescript
 *
 * Author: bsorrentino
 *
 * TYPESCRIPT EXPORTED DECLARATIONS
 *
 */
/// <reference path="gatling.d.ts" preserve="true" />
Object.defineProperty(exports, "__esModule", { value: true });
exports.DoSwitchOrElse$OrElse = exports.DoSwitchOrElse$On = exports.DoSwitch$On = exports.DoIf = exports.DoIfOrElse = exports.DoIfOrElse$Then = exports.DoIfOrElse$OrElse = exports.DoIfEquals = exports.DoIfEqualsOrElse = exports.DoIfEqualsOrElse$Then = exports.DoIfEquals$Then = exports.DoIf$Then = exports.CoreDsl = exports.ConstantRate$ConstantRateOpenInjectionStep = exports.Collectors = exports.ClosedInjectionStep = exports.ClosedInjectionStep$StairsWithTime = exports.ClosedInjectionStep$Stairs = exports.ClosedInjectionStep$RampTo = exports.ClosedInjectionStep$Ramp = exports.ClosedInjectionStep$Constant = exports.ClosedInjectionStep$Composite = exports.ChronoUnit = exports.Choice = exports.Choice$WithWeight = exports.Choice$WithKey = exports.CheckBuilder = exports.CheckBuilder$Validate = exports.CheckBuilder$MultipleFind = exports.CheckBuilder$JsonOfTypeMultipleFind = exports.CheckBuilder$JsonOfTypeFind = exports.CheckBuilder$Find = exports.CheckBuilder$Final = exports.CheckBuilder$CaptureGroupCheckBuilder = exports.ChainBuilder = exports.Body = exports.BodyPart = exports.Body$WithString = exports.Body$WithBytes = exports.Assertion = exports.Assertion$WithPath = exports.Assertion$WithPathAndTimeMetric = exports.Assertion$WithPathAndTarget = exports.Assertion$WithPathAndCountMetric = exports.AsLongAs = exports.AsLongAsDuring = exports.AsLongAsDuring$On = exports.AsLongAs$On = exports.AddCookie = exports.ActionBuilder = void 0;
exports.PauseType$UniformPercentage = exports.PauseType$UniformDuration = exports.PauseType$NormalWithStdDevDuration = exports.PauseType$NormalWithPercentageDuration = exports.PauseType$Custom = exports.Paces = exports.Optional = exports.OpenInjectionStep = exports.OpenInjectionStep$StressPeak = exports.OpenInjectionStep$Stairs = exports.OpenInjectionStep$Ramp = exports.OpenInjectionStep$RampRate = exports.OpenInjectionStep$ConstantRate = exports.Iterable = exports.Http = exports.HttpResponseStatus = exports.HttpRequestActionBuilder = exports.HttpProtocolBuilder = exports.HttpProtocolBuilder$UntypedCondition = exports.HttpProtocolBuilder$TypedCondition = exports.HttpHeaders = exports.HttpDsl = exports.Groups = exports.Groups$On = exports.GetCookie = exports.Forever = exports.Forever$On = exports.ForEach = exports.ForEach$On = exports.Filter = exports.Filter$DenyList = exports.Filter$AllowList = exports.Feeds = exports.FeederBuilder = exports.FeederBuilder$FileBased = exports.FeederBuilder$Batchable = exports.Executable = exports.Execs = exports.Errors = exports.Errors$TryMax = exports.Errors$ExitBlockOnFail = exports.During = exports.During$On = exports.Duration = exports.DoWhile = exports.DoWhileDuring = exports.DoWhileDuring$On = exports.DoWhile$On = exports.DoSwitch = exports.DoSwitchOrElse = void 0;
exports.Ws = exports.WsSendTextActionBuilder = exports.WsSendBinaryActionBuilder = exports.WsFrameCheck = exports.WsAwaitActionBuilder = exports.WithWeight$Then = exports.WithKey$Then = exports.UniformRandomSwitch = exports.UniformRandomSwitch$On = exports.ThrottleStep = exports.ThrottleStep$ReachIntermediate = exports.TemporalUnit = exports.System = exports.StructureBuilder = exports.String = exports.Stream = exports.Stairs$Times = exports.Stairs$Composite = exports.Sse = exports.SseSetCheckActionBuilder = exports.SseMessageCheck = exports.SseConnectActionBuilder = exports.SseAwaitActionBuilder = exports.Simulation = exports.Simulation$SetUp = exports.Session = exports.ScenarioBuilder = exports.RoundRobinSwitch = exports.RoundRobinSwitch$On = exports.Response = exports.ResponseBody = exports.Request = exports.RequestBody = exports.Repeat = exports.Repeat$On = exports.RendezVous = exports.RandomSwitch = exports.RandomSwitchOrElse = exports.RandomSwitchOrElse$OrElse = exports.RandomSwitchOrElse$On = exports.RandomSwitch$On = exports.RampRate$RampRateOpenInjectionStep = exports.RampRate$During = exports.Proxy = exports.ProtocolBuilder = exports.PopulationBuilder = exports.Polling = exports.Polling$Every = exports.Pauses = exports.PauseType = void 0;
exports.ActionBuilder = Java.type("io.gatling.javaapi.core.ActionBuilder");
exports.AddCookie = Java.type("io.gatling.javaapi.http.AddCookie");
exports.AsLongAs$On = Java.type("io.gatling.javaapi.core.loop.AsLongAs$On");
exports.AsLongAsDuring$On = Java.type("io.gatling.javaapi.core.loop.AsLongAsDuring$On");
exports.AsLongAsDuring = Java.type("io.gatling.javaapi.core.loop.AsLongAsDuring");
exports.AsLongAs = Java.type("io.gatling.javaapi.core.loop.AsLongAs");
exports.Assertion$WithPathAndCountMetric = Java.type("io.gatling.javaapi.core.Assertion$WithPathAndCountMetric");
exports.Assertion$WithPathAndTarget = Java.type("io.gatling.javaapi.core.Assertion$WithPathAndTarget");
exports.Assertion$WithPathAndTimeMetric = Java.type("io.gatling.javaapi.core.Assertion$WithPathAndTimeMetric");
exports.Assertion$WithPath = Java.type("io.gatling.javaapi.core.Assertion$WithPath");
exports.Assertion = Java.type("io.gatling.javaapi.core.Assertion");
exports.Body$WithBytes = Java.type("io.gatling.javaapi.core.Body$WithBytes");
exports.Body$WithString = Java.type("io.gatling.javaapi.core.Body$WithString");
exports.BodyPart = Java.type("io.gatling.javaapi.http.BodyPart");
exports.Body = Java.type("io.gatling.javaapi.core.Body");
exports.ChainBuilder = Java.type("io.gatling.javaapi.core.ChainBuilder");
exports.CheckBuilder$CaptureGroupCheckBuilder = Java.type("io.gatling.javaapi.core.CheckBuilder$CaptureGroupCheckBuilder");
exports.CheckBuilder$Final = Java.type("io.gatling.javaapi.core.CheckBuilder$Final");
exports.CheckBuilder$Find = Java.type("io.gatling.javaapi.core.CheckBuilder$Find");
exports.CheckBuilder$JsonOfTypeFind = Java.type("io.gatling.javaapi.core.CheckBuilder$JsonOfTypeFind");
exports.CheckBuilder$JsonOfTypeMultipleFind = Java.type("io.gatling.javaapi.core.CheckBuilder$JsonOfTypeMultipleFind");
exports.CheckBuilder$MultipleFind = Java.type("io.gatling.javaapi.core.CheckBuilder$MultipleFind");
exports.CheckBuilder$Validate = Java.type("io.gatling.javaapi.core.CheckBuilder$Validate");
exports.CheckBuilder = Java.type("io.gatling.javaapi.core.CheckBuilder");
exports.Choice$WithKey = Java.type("io.gatling.javaapi.core.Choice$WithKey");
exports.Choice$WithWeight = Java.type("io.gatling.javaapi.core.Choice$WithWeight");
exports.Choice = Java.type("io.gatling.javaapi.core.Choice");
exports.ChronoUnit = Java.type("java.time.temporal.ChronoUnit");
exports.ClosedInjectionStep$Composite = Java.type("io.gatling.javaapi.core.ClosedInjectionStep$Composite");
exports.ClosedInjectionStep$Constant = Java.type("io.gatling.javaapi.core.ClosedInjectionStep$Constant");
exports.ClosedInjectionStep$Ramp = Java.type("io.gatling.javaapi.core.ClosedInjectionStep$Ramp");
exports.ClosedInjectionStep$RampTo = Java.type("io.gatling.javaapi.core.ClosedInjectionStep$RampTo");
exports.ClosedInjectionStep$Stairs = Java.type("io.gatling.javaapi.core.ClosedInjectionStep$Stairs");
exports.ClosedInjectionStep$StairsWithTime = Java.type("io.gatling.javaapi.core.ClosedInjectionStep$StairsWithTime");
exports.ClosedInjectionStep = Java.type("io.gatling.javaapi.core.ClosedInjectionStep");
exports.Collectors = Java.type("java.util.stream.Collectors");
exports.ConstantRate$ConstantRateOpenInjectionStep = Java.type("io.gatling.javaapi.core.OpenInjectionStep$ConstantRate$ConstantRateOpenInjectionStep");
exports.CoreDsl = Java.type("io.gatling.javaapi.core.CoreDsl");
exports.DoIf$Then = Java.type("io.gatling.javaapi.core.condition.DoIf$Then");
exports.DoIfEquals$Then = Java.type("io.gatling.javaapi.core.condition.DoIfEquals$Then");
exports.DoIfEqualsOrElse$Then = Java.type("io.gatling.javaapi.core.condition.DoIfEqualsOrElse$Then");
exports.DoIfEqualsOrElse = Java.type("io.gatling.javaapi.core.condition.DoIfEqualsOrElse");
exports.DoIfEquals = Java.type("io.gatling.javaapi.core.condition.DoIfEquals");
exports.DoIfOrElse$OrElse = Java.type("io.gatling.javaapi.core.condition.DoIfOrElse$OrElse");
exports.DoIfOrElse$Then = Java.type("io.gatling.javaapi.core.condition.DoIfOrElse$Then");
exports.DoIfOrElse = Java.type("io.gatling.javaapi.core.condition.DoIfOrElse");
exports.DoIf = Java.type("io.gatling.javaapi.core.condition.DoIf");
exports.DoSwitch$On = Java.type("io.gatling.javaapi.core.condition.DoSwitch$On");
exports.DoSwitchOrElse$On = Java.type("io.gatling.javaapi.core.condition.DoSwitchOrElse$On");
exports.DoSwitchOrElse$OrElse = Java.type("io.gatling.javaapi.core.condition.DoSwitchOrElse$OrElse");
exports.DoSwitchOrElse = Java.type("io.gatling.javaapi.core.condition.DoSwitchOrElse");
exports.DoSwitch = Java.type("io.gatling.javaapi.core.condition.DoSwitch");
exports.DoWhile$On = Java.type("io.gatling.javaapi.core.loop.DoWhile$On");
exports.DoWhileDuring$On = Java.type("io.gatling.javaapi.core.loop.DoWhileDuring$On");
exports.DoWhileDuring = Java.type("io.gatling.javaapi.core.loop.DoWhileDuring");
exports.DoWhile = Java.type("io.gatling.javaapi.core.loop.DoWhile");
exports.Duration = Java.type("java.time.Duration");
exports.During$On = Java.type("io.gatling.javaapi.core.loop.During$On");
exports.During = Java.type("io.gatling.javaapi.core.loop.During");
exports.Errors$ExitBlockOnFail = Java.type("io.gatling.javaapi.core.error.Errors$ExitBlockOnFail");
exports.Errors$TryMax = Java.type("io.gatling.javaapi.core.error.Errors$TryMax");
exports.Errors = Java.type("io.gatling.javaapi.core.error.Errors");
exports.Execs = Java.type("io.gatling.javaapi.core.exec.Execs");
exports.Executable = Java.type("io.gatling.javaapi.core.exec.Executable");
exports.FeederBuilder$Batchable = Java.type("io.gatling.javaapi.core.FeederBuilder$Batchable");
exports.FeederBuilder$FileBased = Java.type("io.gatling.javaapi.core.FeederBuilder$FileBased");
exports.FeederBuilder = Java.type("io.gatling.javaapi.core.FeederBuilder");
exports.Feeds = Java.type("io.gatling.javaapi.core.feed.Feeds");
exports.Filter$AllowList = Java.type("io.gatling.javaapi.core.Filter$AllowList");
exports.Filter$DenyList = Java.type("io.gatling.javaapi.core.Filter$DenyList");
exports.Filter = Java.type("io.gatling.javaapi.core.Filter");
exports.ForEach$On = Java.type("io.gatling.javaapi.core.loop.ForEach$On");
exports.ForEach = Java.type("io.gatling.javaapi.core.loop.ForEach");
exports.Forever$On = Java.type("io.gatling.javaapi.core.loop.Forever$On");
exports.Forever = Java.type("io.gatling.javaapi.core.loop.Forever");
exports.GetCookie = Java.type("io.gatling.javaapi.http.GetCookie");
exports.Groups$On = Java.type("io.gatling.javaapi.core.group.Groups$On");
exports.Groups = Java.type("io.gatling.javaapi.core.group.Groups");
exports.HttpDsl = Java.type("io.gatling.javaapi.http.HttpDsl");
exports.HttpHeaders = Java.type("io.netty.handler.codec.http.HttpHeaders");
exports.HttpProtocolBuilder$TypedCondition = Java.type("io.gatling.javaapi.http.HttpProtocolBuilder$TypedCondition");
exports.HttpProtocolBuilder$UntypedCondition = Java.type("io.gatling.javaapi.http.HttpProtocolBuilder$UntypedCondition");
exports.HttpProtocolBuilder = Java.type("io.gatling.javaapi.http.HttpProtocolBuilder");
exports.HttpRequestActionBuilder = Java.type("io.gatling.javaapi.http.HttpRequestActionBuilder");
exports.HttpResponseStatus = Java.type("io.netty.handler.codec.http.HttpResponseStatus");
exports.Http = Java.type("io.gatling.javaapi.http.Http");
exports.Iterable = Java.type("java.lang.Iterable");
exports.OpenInjectionStep$ConstantRate = Java.type("io.gatling.javaapi.core.OpenInjectionStep$ConstantRate");
exports.OpenInjectionStep$RampRate = Java.type("io.gatling.javaapi.core.OpenInjectionStep$RampRate");
exports.OpenInjectionStep$Ramp = Java.type("io.gatling.javaapi.core.OpenInjectionStep$Ramp");
exports.OpenInjectionStep$Stairs = Java.type("io.gatling.javaapi.core.OpenInjectionStep$Stairs");
exports.OpenInjectionStep$StressPeak = Java.type("io.gatling.javaapi.core.OpenInjectionStep$StressPeak");
exports.OpenInjectionStep = Java.type("io.gatling.javaapi.core.OpenInjectionStep");
exports.Optional = Java.type("java.util.Optional");
exports.Paces = Java.type("io.gatling.javaapi.core.pause.Paces");
exports.PauseType$Custom = Java.type("io.gatling.javaapi.core.PauseType$Custom");
exports.PauseType$NormalWithPercentageDuration = Java.type("io.gatling.javaapi.core.PauseType$NormalWithPercentageDuration");
exports.PauseType$NormalWithStdDevDuration = Java.type("io.gatling.javaapi.core.PauseType$NormalWithStdDevDuration");
exports.PauseType$UniformDuration = Java.type("io.gatling.javaapi.core.PauseType$UniformDuration");
exports.PauseType$UniformPercentage = Java.type("io.gatling.javaapi.core.PauseType$UniformPercentage");
exports.PauseType = Java.type("io.gatling.javaapi.core.PauseType");
exports.Pauses = Java.type("io.gatling.javaapi.core.pause.Pauses");
exports.Polling$Every = Java.type("io.gatling.javaapi.http.Polling$Every");
exports.Polling = Java.type("io.gatling.javaapi.http.Polling");
exports.PopulationBuilder = Java.type("io.gatling.javaapi.core.PopulationBuilder");
exports.ProtocolBuilder = Java.type("io.gatling.javaapi.core.ProtocolBuilder");
exports.Proxy = Java.type("io.gatling.javaapi.http.Proxy");
exports.RampRate$During = Java.type("io.gatling.javaapi.core.OpenInjectionStep$RampRate$During");
exports.RampRate$RampRateOpenInjectionStep = Java.type("io.gatling.javaapi.core.OpenInjectionStep$RampRate$RampRateOpenInjectionStep");
exports.RandomSwitch$On = Java.type("io.gatling.javaapi.core.condition.RandomSwitch$On");
exports.RandomSwitchOrElse$On = Java.type("io.gatling.javaapi.core.condition.RandomSwitchOrElse$On");
exports.RandomSwitchOrElse$OrElse = Java.type("io.gatling.javaapi.core.condition.RandomSwitchOrElse$OrElse");
exports.RandomSwitchOrElse = Java.type("io.gatling.javaapi.core.condition.RandomSwitchOrElse");
exports.RandomSwitch = Java.type("io.gatling.javaapi.core.condition.RandomSwitch");
exports.RendezVous = Java.type("io.gatling.javaapi.core.pause.RendezVous");
exports.Repeat$On = Java.type("io.gatling.javaapi.core.loop.Repeat$On");
exports.Repeat = Java.type("io.gatling.javaapi.core.loop.Repeat");
exports.RequestBody = Java.type("io.gatling.http.client.body.RequestBody");
exports.Request = Java.type("io.gatling.http.client.Request");
exports.ResponseBody = Java.type("io.gatling.http.response.ResponseBody");
exports.Response = Java.type("io.gatling.http.response.Response");
exports.RoundRobinSwitch$On = Java.type("io.gatling.javaapi.core.condition.RoundRobinSwitch$On");
exports.RoundRobinSwitch = Java.type("io.gatling.javaapi.core.condition.RoundRobinSwitch");
exports.ScenarioBuilder = Java.type("io.gatling.javaapi.core.ScenarioBuilder");
exports.Session = Java.type("io.gatling.javaapi.core.Session");
exports.Simulation$SetUp = Java.type("io.gatling.javaapi.core.Simulation$SetUp");
exports.Simulation = Java.type("io.gatling.javaapi.core.Simulation");
exports.SseAwaitActionBuilder = Java.type("io.gatling.javaapi.http.SseAwaitActionBuilder");
exports.SseConnectActionBuilder = Java.type("io.gatling.javaapi.http.SseConnectActionBuilder");
exports.SseMessageCheck = Java.type("io.gatling.javaapi.http.SseMessageCheck");
exports.SseSetCheckActionBuilder = Java.type("io.gatling.javaapi.http.SseSetCheckActionBuilder");
exports.Sse = Java.type("io.gatling.javaapi.http.Sse");
exports.Stairs$Composite = Java.type("io.gatling.javaapi.core.OpenInjectionStep$Stairs$Composite");
exports.Stairs$Times = Java.type("io.gatling.javaapi.core.OpenInjectionStep$Stairs$Times");
exports.Stream = Java.type("java.util.stream.Stream");
exports.String = Java.type("java.lang.String");
exports.StructureBuilder = Java.type("io.gatling.javaapi.core.StructureBuilder");
exports.System = Java.type("java.lang.System");
exports.TemporalUnit = Java.type("java.time.temporal.TemporalUnit");
exports.ThrottleStep$ReachIntermediate = Java.type("io.gatling.javaapi.core.ThrottleStep$ReachIntermediate");
exports.ThrottleStep = Java.type("io.gatling.javaapi.core.ThrottleStep");
exports.UniformRandomSwitch$On = Java.type("io.gatling.javaapi.core.condition.UniformRandomSwitch$On");
exports.UniformRandomSwitch = Java.type("io.gatling.javaapi.core.condition.UniformRandomSwitch");
exports.WithKey$Then = Java.type("io.gatling.javaapi.core.Choice$WithKey$Then");
exports.WithWeight$Then = Java.type("io.gatling.javaapi.core.Choice$WithWeight$Then");
exports.WsAwaitActionBuilder = Java.type("io.gatling.javaapi.http.WsAwaitActionBuilder");
exports.WsFrameCheck = Java.type("io.gatling.javaapi.http.WsFrameCheck");
exports.WsSendBinaryActionBuilder = Java.type("io.gatling.javaapi.http.WsSendBinaryActionBuilder");
exports.WsSendTextActionBuilder = Java.type("io.gatling.javaapi.http.WsSendTextActionBuilder");
exports.Ws = Java.type("io.gatling.javaapi.http.Ws");
