import { Option, Argument } from "commander";
import { SimulationFile } from "../simulations";
export declare const gatlingHomeOption: Option;
export declare const gatlingHomeOptionValueWithDefaults: (options: any) => string;
export declare const sourcesFolderOption: Option;
export declare const sourcesFolderOptionValue: (options: any) => string;
export declare const simulationOption: Option;
export declare const simulationOptionValueWithDefaults: (options: any, simulationsFound: SimulationFile[], interactive: boolean) => string;
export declare const simulationMandatoryOption: Option;
export declare const simulationMandatoryOptionValue: (options: any) => string;
export declare const bundleFileOption: Option;
export declare const bundleFileOptionValue: (options: any) => string;
export declare const packageFileOption: Option;
export declare const packageFileOptionValue: (options: any) => string;
export declare const resourcesFolderOption: Option;
export declare const resourcesFolderOptionValue: (options: any) => string;
export declare const resultsFolderOption: Option;
export declare const resultsFolderOptionValue: (options: any) => string;
export declare const typescriptOption: Option;
export declare const typescriptOptionValueWithDefaults: (options: any, simulationsFound: SimulationFile[]) => boolean;
export declare const graalvmHomeMandatoryOption: Option;
export declare const graalvmHomeMandatoryOptionValue: (options: any) => string;
export declare const jvmClasspathMandatoryOption: Option;
export declare const jvmClasspathMandatoryOptionValue: (options: any) => string;
export declare const memoryOption: Option;
export declare const memoryOptionValue: (options: any) => number | undefined;
export declare const nonInteractiveOption: Option;
export declare const nonInteractiveOptionValue: (options: any) => boolean;
export declare const postmanOption: Option;
export declare const postmanOptionValueWithDefaults: (options: any) => string | undefined;
export declare const runParametersArgument: Argument;
export declare const parseRunParametersArgument: (args: string[]) => Record<string, string>;
export declare const bundleFileArgument: Argument;
export declare const apiUrlOption: Option;
export declare const apiUrlOptionValue: (options: any) => string;
export declare const webAppUrlOption: Option;
export declare const webAppUrlOptionValue: (options: any) => string;
export declare const apiTokenOption: Option;
export declare const apiTokenOptionValue: (options: any) => string | undefined;
export declare const controlPlaneUrlOption: Option;
export declare const controlPlaneUrlOptionValue: (options: any) => string | undefined;
export declare const packageDescriptorFilenameOption: Option;
export declare const packageDescriptorFilenameOptionValue: (options: any) => string;
export declare const enterpriseSimulationOption: Option;
export declare const enterpriseSimulationOptionValue: (options: any) => string | undefined;
export declare const runTitleOption: Option;
export declare const runTitleOptionValue: (options: any) => string | undefined;
export declare const runDescriptionOption: Option;
export declare const runDescriptionOptionValue: (options: any) => string | undefined;
export declare const waitForRunEndOption: Option;
export declare const waitForRunEndOptionValue: (options: any) => boolean;
