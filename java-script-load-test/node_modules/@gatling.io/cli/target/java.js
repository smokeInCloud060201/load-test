"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.runJavaProcess = void 0;
const child_process_1 = require("child_process");
const os_1 = require("./dependencies/os");
const log_1 = require("./log");
const runJavaProcess = (options, mainClass, additionalClasspathElements, javaArgs, mainClassArgs) => {
    const command = `${options.graalvmHome}/bin/java`;
    const classpathSeparator = os_1.osType === "Windows_NT" ? ";" : ":";
    const classpath = [...additionalClasspathElements, options.jvmClasspath].join(classpathSeparator);
    const allArgs = [
        "-server",
        "-XX:+HeapDumpOnOutOfMemoryError",
        "-XX:MaxInlineLevel=20",
        "-XX:MaxTrivialSize=12",
        "-classpath",
        classpath,
        ...javaArgs,
        mainClass,
        ...mainClassArgs
    ];
    const spawned = (0, child_process_1.spawn)(command, allArgs, {
        env: process.env,
        stdio: [process.stdin, process.stdout, process.stderr]
    });
    return new Promise((resolve, reject) => {
        spawned.on("error", (error) => log_1.logger.error("Failed to run Gatling process: " + error.toString()));
        spawned.on("close", (code) => {
            if (code === 0) {
                resolve();
            }
            else {
                reject(Error("Gatling process finished with code " + code));
            }
        });
    });
};
exports.runJavaProcess = runJavaProcess;
