"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.bundle = void 0;
const esbuild = __importStar(require("esbuild"));
const esbuild_plugin_tsc_1 = __importDefault(require("esbuild-plugin-tsc"));
const polyfill_1 = require("./polyfill");
const log_1 = require("../log");
const bundle = async (options) => {
    log_1.logger.info(`Bundling a Gatling simulation with options:
 - sourcesFolder: ${options.sourcesFolder}
 - bundleFile: ${options.bundleFile}
 - typescript: ${options.typescript}`);
    const contents = options.simulations.map((s) => `export { default as "${s.name}" } from "./${s.path}";`).join("\n");
    const plugins = options.typescript ? [(0, esbuild_plugin_tsc_1.default)({ force: true })] : [];
    if (options.postman !== undefined) {
        plugins.push((0, polyfill_1.polyfill)());
    }
    await esbuild.build({
        stdin: {
            contents,
            resolveDir: options.sourcesFolder
        },
        outfile: options.bundleFile,
        platform: "neutral",
        mainFields: ["main", "module"],
        bundle: true,
        minify: false,
        sourcemap: true,
        format: "iife",
        globalName: "gatling",
        plugins
    });
};
exports.bundle = bundle;
