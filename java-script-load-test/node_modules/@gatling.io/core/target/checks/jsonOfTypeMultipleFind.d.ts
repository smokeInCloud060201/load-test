import { CheckBuilderMultipleFind } from "./multipleFind";
import JvmCheckBuilderJsonOfTypeMultipleFind = io.gatling.javaapi.core.CheckBuilder$JsonOfTypeMultipleFind;
/**
 * A special {@link CheckBuilderFind<string>} that works on JSON
 */
export interface CheckBuilderJsonOfTypeMultipleFind extends CheckBuilderMultipleFind<string> {
    /**
     * Define that the extracted value is a String
     *
     * @returns a new MultipleFind
     */
    ofString(): CheckBuilderMultipleFind<string>;
    /**
     * Define that the extracted value is a Boolean
     *
     * @returns a new MultipleFind
     */
    ofBoolean(): CheckBuilderMultipleFind<boolean>;
    /**
     * Define that the extracted value is an Integer
     *
     * @returns a new MultipleFind
     */
    ofInt(): CheckBuilderMultipleFind<number>;
    /**
     * Define that the extracted value is a Long
     *
     * @returns a new MultipleFind
     */
    ofLong(): CheckBuilderMultipleFind<number>;
    /**
     * Define that the extracted value is a Double
     *
     * @returns a new MultipleFind
     */
    ofDouble(): CheckBuilderMultipleFind<number>;
    /**
     * Define that the extracted value is a List (a JSON array)
     *
     * @returns a new MultipleFind
     */
    ofList(): CheckBuilderMultipleFind<unknown[]>;
    /**
     * Define that the extracted value is a Map (a JSON object)
     *
     * @returns a new MultipleFind
     */
    ofMap(): CheckBuilderMultipleFind<Record<string, unknown>>;
    /**
     * Define that the extracted value is an untyped object
     *
     * @returns a new MultipleFind
     */
    ofObject(): CheckBuilderMultipleFind<unknown>;
}
export declare const wrapCheckBuilderJsonOfTypeMultipleFind: (_underlying: JvmCheckBuilderJsonOfTypeMultipleFind) => CheckBuilderJsonOfTypeMultipleFind;
