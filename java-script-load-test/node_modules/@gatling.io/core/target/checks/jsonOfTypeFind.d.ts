import { CheckBuilderFind } from "./find";
import JvmCheckBuilderJsonOfTypeFind = io.gatling.javaapi.core.CheckBuilder$JsonOfTypeFind;
/**
 * A special {@link CheckBuilderFind<string>} that works on JSON
 */
export interface CheckBuilderJsonOfTypeFind extends CheckBuilderFind<string> {
    /**
     * Define that the extracted value is a String
     *
     * @returns a new CheckBuilderFind
     */
    ofString(): CheckBuilderFind<string>;
    /**
     * Define that the extracted value is a Boolean
     *
     * @returns a new CheckBuilderFind
     */
    ofBoolean(): CheckBuilderFind<boolean>;
    /**
     * Define that the extracted value is an Integer
     *
     * @returns a new CheckBuilderFind
     */
    ofInt(): CheckBuilderFind<number>;
    /**
     * Define that the extracted value is a Long
     *
     * @returns a new CheckBuilderFind
     */
    ofLong(): CheckBuilderFind<number>;
    /**
     * Define that the extracted value is a Double
     *
     * @returns a new CheckBuilderFind
     */
    ofDouble(): CheckBuilderFind<number>;
    /**
     * Define that the extracted value is a List (a JSON array)
     *
     * @returns a new CheckBuilderFind
     */
    ofList(): CheckBuilderFind<unknown[]>;
    /**
     * Define that the extracted value is a Map (a JSON object)
     *
     * @returns a new CheckBuilderFind
     */
    ofMap(): CheckBuilderFind<Record<string, unknown>>;
    /**
     * Define that the extracted value is an untyped object
     *
     * @returns a new CheckBuilderFind
     */
    ofObject(): CheckBuilderFind<unknown>;
}
export declare const wrapCheckBuilderJsonOfTypeFind: (_underlying: JvmCheckBuilderJsonOfTypeFind) => CheckBuilderJsonOfTypeFind;
